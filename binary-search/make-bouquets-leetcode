class Solution {
public:
    bool isPossible(vector<int>& bloomDay, int nofbuqe,int nofflowers, int mid){
        int n = bloomDay.size();
        int adjflo = 0;
        int bcount = 0;

        for(int i = 0; i<n ; i++){

            if(bloomDay[i] <= mid){ // flower bloomed
                adjflo++;
                if(adjflo == nofflowers){
                    bcount++;

                    if(bcount == nofbuqe) return true;

                    adjflo = 0;
                }
            }
            else adjflo = 0;  
        }
        return false;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {

        int n = bloomDay.size();
        if((long long int)m*k > n) return -1;

        int s=0;
        int e= *max_element(bloomDay.begin(),bloomDay.end());

        int ans = -1;
        while(s<=e){
            int mid = s+(e-s)/2;

            if(isPossible(bloomDay,m,k,mid)){
                ans  = mid;
                e = mid-1;
            }
            else{
                s = mid+1;
            }
        }
        return ans;
    }
};
