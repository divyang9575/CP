class Solution {
public:

    bool ifPossible(vector<int> arr,int n,int d,int capacity){
        int tempsum = 0;
        int tempdays = 1;
        
        int i = 0;
        for(int i = 0; i<n ; i++){
            if(tempsum+arr[i] <= capacity){
                
                tempsum += arr[i];
                
            }    
            else{
                
                tempdays++;
                
                if(tempdays > d  ||  arr[i] > capacity) return false;
                
                tempsum = arr[i];
                
            }           
        }
        
        return true;
        
    }

    int shipWithinDays(vector<int>& arr, int d) {
        
        int n = arr.size();

        int sum = 0;
        for(int i = 0; i<n; i++) sum += arr[i];
        
        int s = 0;
        int e = sum;
        
        int ans = 0;
        while(s<=e){
            int capacity = s+(e-s)/2;
            
            if(ifPossible(arr,n,d,capacity)) {
                ans=capacity;
                e=capacity-1;
            }
            
            else s=capacity+1;
        }
        return ans;

    }
};
